{"version":3,"sources":["services/musicsAPI.js","redux/actions/index.js","redux/reducers/login.js","redux/reducers/search.js","redux/reducers/album.js","redux/reducers/index.js","redux/store/index.js","assets/CheckInputName.js","services/userAPI.js","assets/EntryCondition.js","Pages/Login.js","Pages/LoadingMessage.js","Components/Header.js","services/searchAlbumsAPI.js","assets/GetArtistInfos.js","context/album.js","Components/Cards.js","Components/RenderAlbuns.js","Pages/Search.js","assets/images/play.svg","assets/images/stop.svg","services/favoriteSongsAPI.js","assets/CheckedFavorited.js","Components/MusicCard.js","Pages/Album.js","Pages/Favorites.js","assets/images/profile-icon.svg","Pages/Profile.js","Pages/ProfileEdit.js","Pages/NotFound.js","assets/GetUserInfos.js","assets/RestoreFavoriteList.js","assets/GetFavoriteList.js","App.js","index.js"],"names":["getMusics","id","a","fetch","request","json","requestJson","results","GET_USER","GET_SEARCH_VALUE","GET_INFOS_SONGS","getSearchValue","payload","type","getAlbumInfo","getSongInfo","dispatch","response","name","collectionName","songInfos","artist","artistName","console","log","INITIAL_LOGIN_STATE","user","login","state","action","INITIAL_SEARCH_STATE","search","album","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","checkInputName","length","USER_KEY","saveUser","localStorage","setItem","JSON","stringify","simulateRequest","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","email","image","description","e","preventDefault","entryCondition","Login","useDispatch","useState","setUser","redirect","setRedirect","to","className","htmlFor","value","onChange","target","disabled","onClick","Loading","Component","Header","props","loading","pathname","location","selectBackground","username","useSelector","defaultProps","searchAlbumsAPI","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","map","artistId","collectionId","collectionPrice","artworkUrl100","releaseDate","trackCount","searchValue","arrayAlbuns","getArtistInfos","AlbumContext","createContext","Provider","Consumer","AlbumInfos","promiseResolve","setPromiseResolve","albumList","setAlbumList","context","setSearchValue","children","Cards","this","albumObject","src","alt","RenderAlbuns","useContext","Search","isloading","setIsLoading","isDisabled","handleClick","list","onSubmit","placeholder","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","trackName","previewUrl","trackInfo","checked","MusicCard","param","isPlay","setIsPlay","setLoading","infosSongs","url","setUrl","audio","useMemo","Audio","favoritesList","useEffect","play","pause","music","index","checkedFavorited","handlePlay","stop","Album","useRouteMatch","params","getSongInfoAsync","useCallback","Favorites","Profile","profileIcon","ProfileEdit","NotFound","getUsermame","setState","recoverFavorites","Props","favorites","getFavoriteList","forEach","favoriteMusic","document","getElementById","error","App","bind","_","previousState","exact","path","component","render","ReactDOM","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.0e172018.chunk.js","sourcesContent":["const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import getMusics from '../../services/musicsAPI';\n\nexport const GET_USER = 'GET_USER';\nexport const GET_SEARCH_VALUE = 'GET_SEARCH_VALUE';\nexport const GET_INFOS_SONGS = 'GET_INFO_SONGS';\n\nexport const getUser = (payload) => ({\n  type: GET_USER,\n  payload,\n});\n\nexport const getSearchValue = (payload) => ({\n  type: GET_SEARCH_VALUE,\n  payload,\n});\n\nexport const getAlbumInfo = (payload) => ({\n  type: GET_INFOS_SONGS,\n  payload,\n});\n\nexport const getSongInfo = (id) => async (dispatch) => {\n  try {\n    const response = await getMusics(id);\n    const payload = {\n      name: response[0].collectionName,\n      songInfos: response,\n    };\n    dispatch(getSearchValue({ artist: response[0].artistName }));\n    dispatch(getAlbumInfo(payload));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { GET_USER } from '../actions';\n\nconst INITIAL_LOGIN_STATE = {\n  user: '',\n};\n\nfunction login(state = INITIAL_LOGIN_STATE, action) {\n  switch (action.type) {\n  case GET_USER:\n    return {\n      ...state,\n      user: action.payload.user,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default login;\n","import { GET_SEARCH_VALUE } from '../actions';\n\nconst INITIAL_SEARCH_STATE = {\n  artist: '',\n};\n\nfunction search(state = INITIAL_SEARCH_STATE, action) {\n  switch (action.type) {\n  case GET_SEARCH_VALUE:\n    return {\n      ...state,\n      artist: action.payload.artist,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default search;\n","import { GET_INFOS_SONGS } from '../actions';\n\nconst INITIAL_LOGIN_STATE = {\n  name: '',\n  songInfos: [],\n};\n\nfunction album(state = INITIAL_LOGIN_STATE, action) {\n  switch (action.type) {\n  case GET_INFOS_SONGS:\n    return {\n      ...state,\n      name: action.payload.name,\n      songInfos: action.payload.songInfos,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default album;\n","import { combineReducers } from 'redux';\nimport login from './login';\nimport search from './search';\nimport album from './album';\n\nconst rootReducer = combineReducers({\n  login,\n  search,\n  album,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","function checkInputName(user) {\n  const minimumCharacters = 3;\n  const result = user.length < minimumCharacters;\n  return result;\n}\n\nexport default checkInputName;\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import { createUser } from '../services/userAPI';\n\nasync function entryCondition(e, user) {\n  e.preventDefault();\n  await createUser({ name: user });\n}\n\nexport default entryCondition;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport checkInputName from '../assets/CheckInputName';\nimport entryCondition from '../assets/EntryCondition';\nimport { getUser } from '../redux/actions';\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const [user, setUser] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) {\n    return <Redirect to=\"/search\" />;\n  }\n  return (\n    <>\n      <div className=\"flex justify-between w-full p-3 header fixed\">\n        <p className=\"font-bold text-2xl text-white p-2 logo-title\">TrybeTunes</p>\n      </div>\n      <div data-testid=\"page-login\" className=\"flex justify-center h-screen w-full\">\n        <div className=\"items-center m-auto container-login pt-28 pb-28 rounded-3xl\">\n          <form\n            className=\"row g-3 needs-validation\"\n          >\n            <h1 className=\"text-center font-bold\">Login</h1>\n            <div className=\"text-center\">\n              <label htmlFor=\"login-name-input\" className=\"form-label\">\n                <p> Digite seu nome</p>\n                <input\n                  type=\"text\"\n                  name=\"user\"\n                  id=\"login-name-input\"\n                  data-testid=\"login-name-input\"\n                  value={ user }\n                  onChange={ (e) => setUser(e.target.value) }\n                  className=\"form-control form-control-sm rounded-3xl\"\n                />\n              </label>\n            </div>\n            <div className=\"w-full text-center\">\n              <button\n                type=\"submit\"\n                data-testid=\"login-submit-button\"\n                disabled={ checkInputName(user) }\n                onClick={ (e) => {\n                  entryCondition(e, user);\n                  dispatch(getUser({ user }));\n                  setRedirect(true);\n                } }\n                className=\"btn btn-primary m-auto\"\n              >\n                Enviar\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <p>Carregando...</p>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Loading from '../Pages/LoadingMessage';\n\nfunction Header(props) {\n  const { loading, location: { pathname } } = props;\n  const selectBackground = 'btn2-active';\n  const username = useSelector((state) => state.login.user);\n  const user = localStorage.getItem('user');\n\n  return (\n    <header\n      data-testid=\"header-component\"\n      className=\"\"\n    >\n      <div className=\"flex justify-between w-full p-3 header\">\n        <p className=\"font-bold text-2xl text-white p-2 logo-title\">TrybeTunes</p>\n        { loading\n          ? <Loading />\n          : (\n            <p\n              data-testid=\"header-user-name\"\n              className=\"text-white align-middle m-0 self-center\"\n            >\n              { username || JSON.parse(user).name || 'User Test' }\n            </p>)}\n      </div>\n      <nav className=\"grid grid-cols-3 pb-3\">\n        <Link\n          data-testid=\"link-to-search\"\n          to=\"/search\"\n          className={ `btn2\n          p-3 text-center ${pathname === '/search' && selectBackground}` }\n        >\n          <button\n            type=\"button\"\n          >\n            Pesquisa\n          </button>\n        </Link>\n        <Link\n          data-testid=\"link-to-favorites\"\n          to=\"/favorites\"\n          className={ `btn2\n          p-3 text-center ${pathname === '/favorites' && selectBackground}` }\n        >\n\n          <button\n            type=\"button\"\n          >\n            Favoritos\n          </button>\n        </Link>\n        <Link\n          data-testid=\"link-to-profile\"\n          to=\"/profile\"\n          className={ `btn2\n          p-3 text-center ${pathname === '/profile' && selectBackground}` }\n        >\n          <button\n            type=\"button\"\n          >\n            Perfil\n          </button>\n        </Link>\n      </nav>\n    </header>\n  );\n}\n\nHeader.defaultProps = {\n  loading: true,\n  location: { pathname: '/search' },\n};\n\nHeader.propTypes = {\n  loading: PropTypes.bool,\n  location: PropTypes.objectOf(PropTypes.string),\n};\n\nexport default Header;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import searchAlbumsAPI from '../services/searchAlbumsAPI';\n\nasync function getArtistInfos(searchValue) {\n  const arrayAlbuns = await searchAlbumsAPI(searchValue);\n  return arrayAlbuns;\n}\n\nexport default getArtistInfos;\n","import PropTypes from 'prop-types';\nimport React, { createContext, useState } from 'react';\n\nconst AlbumContext = createContext();\nconst { Provider, Consumer } = AlbumContext;\n\nfunction AlbumInfos(props) {\n  const [promiseResolve, setPromiseResolve] = useState(false);\n  const [albumList, setAlbumList] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const context = {\n    promiseResolve,\n    setPromiseResolve,\n    albumList,\n    setAlbumList,\n    searchValue,\n    setSearchValue,\n  };\n\n  const { children } = props;\n  return <Provider value={ context }>{children}</Provider>;\n}\n\nAlbumInfos.propTypes = {\n  children: PropTypes.shape().isRequired,\n};\n\nexport { AlbumInfos as Provider, Consumer, AlbumContext };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\n\nclass Cards extends Component {\n  render() {\n    const { albumObject: { artistName,\n      collectionId, collectionName, artworkUrl100 } } = this.props;\n    return (\n      <div className=\"card shadow-lg bg-body w-full\">\n        <Link\n          data-testid={ `link-to-album-${collectionId}` }\n          to={ `/album/${collectionId}` }\n          className=\"text-decoration-none\"\n        >\n          <img\n            src={ artworkUrl100 }\n            alt={ artistName }\n            className=\"card-img-top\"\n          />\n          <div className=\"card-body\">\n            <h3 className=\"card-title cart-title-customized mb-2\">\n              { collectionName }\n            </h3>\n            <h1\n              className=\"card-title cart-title-customized mb-3\n            font-bold text-xl text-muted\"\n            >\n              { artistName }\n            </h1>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nCards.propTypes = {\n  albumObject: PropTypes.shape({\n    artistName: PropTypes.string,\n    artworkUrl100: PropTypes.string,\n    collectionId: PropTypes.number,\n    collectionName: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Cards;\n","import React, { useContext } from 'react';\nimport { AlbumContext } from '../context/album';\nimport Cards from './Cards';\n\nexport default function RenderAlbuns() {\n  const { searchValue, promiseResolve, albumList } = useContext(AlbumContext);\n  if (promiseResolve && albumList.length === 0) {\n    return <p>Nenhum álbum foi encontrado</p>;\n  }\n  if (promiseResolve) {\n    return (\n      <>\n        <h1\n          className=\"font-bold text-2xl p-4\"\n        >\n          {`Resultado de álbuns de: ${searchValue}`}\n        </h1>\n        <div className=\"container-cards w-full\">\n          {\n            albumList.map((album) => (\n              <Cards key={ album.collectionId } albumObject={ album } />))\n          }\n        </div>\n      </>\n    );\n  }\n  return null;\n}\n","import React, { useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Header from '../Components/Header';\nimport getArtistInfos from '../assets/GetArtistInfos';\nimport Loading from './LoadingMessage';\nimport RenderAlbuns from '../Components/RenderAlbuns';\nimport { AlbumContext } from '../context/album';\nimport { getSearchValue } from '../redux/actions';\n\nfunction Search(props) {\n  const { searchValue, setPromiseResolve,\n    setAlbumList, setSearchValue } = useContext(AlbumContext);\n  const dispatch = useDispatch();\n\n  const [isloading, setIsLoading] = useState(false);\n  let isDisabled = true;\n\n  if (searchValue.length > 1) { isDisabled = false; }\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const list = await getArtistInfos(searchValue);\n    setPromiseResolve(true);\n    setIsLoading(false);\n    setAlbumList(list);\n    dispatch(getSearchValue({ name: searchValue }));\n  };\n\n  return (\n    <div\n      data-testid=\"page-search\"\n      className=\"container-fluid p-0 w-screen\"\n      onSubmit={ (e) => e.preventDefault() }\n    >\n      <Header { ...props } { ...this } />\n      <form className=\"flex gap-4 justify-center container_form\">\n        <input\n          data-testid=\"search-artist-input\"\n          type=\"text\"\n          name=\"searchValue\"\n          placeholder=\"search\"\n          value={ searchValue }\n          onChange={ ({ target }) => setSearchValue(target.value) }\n          className=\"form-control\n            form-control-sm rounded-3xl input-search\"\n        />\n        <button\n          data-testid=\"search-artist-button\"\n          type=\"submit\"\n          disabled={ isDisabled }\n          onClick={ handleClick }\n          className=\"d-none d-sm-block btn btn-primary\"\n        >\n          Pesquisar\n        </button>\n      </form>\n      <section className=\"w-screen\">\n        { isloading ? <Loading />\n          : <RenderAlbuns /> }\n      </section>\n    </div>\n  );\n}\n\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/play.65864fd4.svg\";","export default __webpack_public_path__ + \"static/media/stop.1e0abca2.svg\";","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport Loading from '../Pages/LoadingMessage';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\n\nexport default async function checkedFavorited({\n  trackId, trackName, action, previewUrl, loading }) {\n  const trackInfo = { previewUrl, trackName, trackId };\n  if (loading) return <Loading />;\n  if (action.target.checked) await addSong(trackInfo);\n  if (action.target.checked === false) await removeSong(trackInfo);\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport play from '../assets/images/play.svg';\nimport stop from '../assets/images/stop.svg';\nimport checkedFavorited from '../assets/CheckedFavorited';\nimport Loading from '../Pages/LoadingMessage';\n\nfunction MusicCard({ param }) {\n  const [isPlay, setIsPlay] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const infosSongs = useSelector((state) => state.album.songInfos);\n  const [url, setUrl] = useState('');\n  const audio = useMemo(() => new Audio(url), [url]);\n  const favoritesList = JSON.parse(localStorage.getItem('favorite_songs'));\n\n  useEffect(() => (isPlay ? audio.play()\n    : audio.pause()),\n  [audio, isPlay]);\n\n  const handlePlay = (previewUrl) => {\n    if (isPlay) {\n      audio.pause();\n    }\n    setUrl(previewUrl);\n    setIsPlay(!isPlay);\n  };\n\n  return (!param ? !infosSongs : !favoritesList)\n    ? <Loading /> : (param === 'favorites'\n      ? favoritesList : infosSongs).map((music, index) => {\n      const { trackId, trackName, previewUrl } = music;\n      return (!param ? index > 0 : index >= 0) && <hr /> && (\n        <section key={ index }>\n          {(!param ? index === 1 : index === 0) && <hr />}\n          <div key={ index } className=\"container-songs\">\n            <span className=\"self-center border-r-2\" />\n            <span\n              className=\"absolute self-center text-center ml-1\"\n            >\n              {!param ? index : index + 1}\n            </span>\n            <p className=\"cart-title-customized text-center\">{trackName}</p>\n            <label htmlFor={ `checkbox-music-${trackId}` } className=\"text-center\">\n              <input\n                onChange={ (action) => {\n                  setLoading(true);\n                  checkedFavorited({ trackId, trackName, action, previewUrl, loading });\n                  setLoading(false);\n                } }\n                type=\"checkbox\"\n                id={ trackId }\n                data-testid={ `checkbox-music-${trackId}` }\n              />\n              Favoritar\n            </label>\n            <button\n              type=\"button\"\n              onClick={ () => handlePlay(previewUrl) }\n              className=\"self-center icon-audio m-auto\"\n            >\n              <img\n                src={ isPlay && url === previewUrl ? stop : play }\n                alt=\"\"\n                className=\"self-center\"\n              />\n            </button>\n          </div>\n          <hr />\n        </section>\n      );\n    });\n}\n\nMusicCard.defaultProps = {\n  param: '',\n};\n\nMusicCard.propTypes = {\n  param: Proptypes.string,\n};\n\nexport default MusicCard;\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport MusicCard from '../Components/MusicCard';\nimport { getSongInfo } from '../redux/actions';\n\nfunction Album(props) {\n  const { id } = useRouteMatch().params;\n  const artistName = useSelector((state) => state.search.artist);\n  const collectionName = useSelector((state) => state.album.name);\n  const dispatch = useDispatch();\n  const getSongInfoAsync = useCallback(async () => dispatch(getSongInfo(id)),\n    [dispatch, id]);\n\n  useEffect(() => {\n    getSongInfoAsync();\n  }, [getSongInfoAsync, id]);\n\n  return (\n    <div data-testid=\"page-album\">\n      <Header { ...props } { ...this } />\n      <div className=\"pb-5 pl-7 pr-7\">\n        <h1 className=\"font-bold text-1xl m-0 p-1\">Album:</h1>\n        <h3\n          data-testid=\"album-name\"\n          className=\"font-bold text-1xl m-0\"\n        >\n          { collectionName }\n        </h3>\n        <h2\n          data-testid=\"artist-name\"\n          className=\"font-semibold text-xl pb-3 pl-5 text-muted underline\"\n        >\n          { `by ${artistName}` }\n        </h2>\n        <div>\n          <MusicCard />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Header from '../Components/Header';\nimport MusicCard from '../Components/MusicCard';\n\nclass Favorites extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header { ...this.props } { ...this } />\n        <h1 className=\"font-bold text-1xl m-0 pb-7 pt-1 text-center\">Favorites</h1>\n        <div className=\"pb-5 pl-7 pr-7\">\n          <section>\n            <MusicCard param=\"favorites\" />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","export default __webpack_public_path__ + \"static/media/profile-icon.fb20c290.svg\";","import React, { Component } from 'react';\nimport Header from '../Components/Header';\nimport profileIcon from '../assets/images/profile-icon.svg';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile\">\n        <Header { ...this.props } { ...this } />\n        <h1 className=\"font-bold text-1xl m-0 pb-7 pt-1 text-center\">Profile</h1>\n        <section className=\"p-5\">\n          <div className=\"flex justify-between pb-5\">\n            <img\n              src={ profileIcon }\n              alt=\"profile icon\"\n              className=\"w-28 rounded-full bg-gray-700\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger h-10 self-center\"\n            >\n              Editar perfil\n            </button>\n          </div>\n          <h4 className=\"font-bold\">Nome</h4>\n          <p className=\"text-muted\">User</p>\n          <h4 className=\"font-bold\">E-mail</h4>\n          <p className=\"text-muted\">email@gmail.com</p>\n          <h4 className=\"font-bold\">Descrição</h4>\n          <p className=\"text-muted\">\n            Lorem ipsum pulvinar viverra ante leo etiam placerat ipsum congue\n            justo nec vitae leo urna, amet tincidunt aptent neque primis massa lectus\n            purus interdum class conubia semper. venenatis dapibus ultrices morbi sociosqu\n            elementum nec interdum risus, donec in velit auctor cursus turpis facilisis\n            torquenta, scelerisque magna in nam risus fermentum justo.\n          </p>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport Header from '../Components/Header';\n\nclass ProfileEdit extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header { ...this.props } { ...this } />\n        <h1>ProfileEdit</h1>\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        <h1>NotFound</h1>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import { getUser } from '../services/userAPI';\n\nexport default async function getUsermame() {\n  const { name } = await getUser();\n  this.setState({\n    username: name,\n    loading: false,\n  });\n}\n","import React from 'react';\nimport Loading from '../Pages/LoadingMessage';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nexport default async function recoverFavorites(Props) {\n  const { loading } = Props;\n  this.setState({ loading: true });\n  if (loading) return <Loading />;\n  const favorites = await getFavoriteSongs();\n  this.setState({\n    loading: false,\n    favorites,\n  });\n}\n","export default async function getFavoriteList() {\n  try {\n    const { favorites } = this.state;\n    favorites.forEach(({ trackId }) => {\n      const favoriteMusic = document.getElementById(trackId);\n      if (favoriteMusic) {\n        favoriteMusic.checked = 'true';\n      }\n    });\n  } catch (error) { console.log(error); }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './Pages/Login';\nimport Search from './Pages/Search';\nimport Album from './Pages/Album';\nimport Favorites from './Pages/Favorites';\nimport Profile from './Pages/Profile';\nimport ProfileEdit from './Pages/ProfileEdit';\nimport NotFound from './Pages/NotFound';\nimport getUsermame from './assets/GetUserInfos';\nimport getArtistInfos from './assets/GetArtistInfos';\nimport recoverFavorites from './assets/RestoreFavoriteList';\nimport getFavoriteList from './assets/GetFavoriteList';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context/album';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favorites: [],\n      redirect: false,\n    };\n\n    this.getUsermame = getUsermame.bind(this);\n    this.getArtistInfos = getArtistInfos.bind(this);\n    this.recoverFavorites = recoverFavorites.bind(this);\n    this.getFavoriteList = getFavoriteList.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUsermame();\n    this.recoverFavorites({ ...this.props });\n  }\n\n  componentDidUpdate(_, previousState) {\n    const { favorites } = this.state;\n    if (previousState.favorites !== favorites) {\n      this.getFavoriteList();\n    }\n  }\n\n  render() {\n    return (\n      <Provider>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={ Login }\n          />\n\n          <Route\n            exact\n            path=\"/search\"\n            component={ Search }\n          />\n\n          <Route\n            exact\n            path=\"/album/:id\"\n            component={ Album }\n          />\n\n          <Route\n            exact\n            path=\"/favorites\"\n            render={ (props) => (<Favorites\n              { ...this }\n              { ...this.state }\n              { ...props }\n            />) }\n          />\n\n          <Route\n            exact\n            path=\"/profile\"\n            render={ (props) => (<Profile\n              { ...this }\n              { ...this.state }\n              { ...props }\n            />) }\n          />\n\n          <Route\n            exact\n            path=\"/profile/edit\"\n            render={ () => (<ProfileEdit { ...this } { ...this.state } />) }\n          />\n\n          <Route component={ NotFound } />\n\n        </Switch>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}